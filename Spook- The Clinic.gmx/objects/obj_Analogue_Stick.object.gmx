<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>vjoy_Theme_Flat_Light_AS</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Custom Config
deadzone = 0.1;
display_set_gui_size(view_wview[0]/*568*/,view_hview[0]/*320*/); 


//Do not edit below
//Ivars
image_speed = 0;
radius = sprite_width * 0.5;
joyx = 0;
joyy = 0;
normalx = 0;
normaly = 0;
normaldir = 0;
touching = false;
touchid = -1;




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle Input
if(touching){

    if(device_mouse_check_button(touchid, mb_left) == false){
        touching = false
        touchid = -1;
    }
    
}else{

    for(i = 0; i &lt; 2; i++){
    
            touchPoint = point_distance(x,y, device_mouse_x_to_gui(i),device_mouse_y_to_gui(i))
            if(touchPoint &lt;= radius &amp;&amp; device_mouse_check_button(i, mb_left)){
                touchid = i;
                touching = true;
            }
        
    }

}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Logic for Sticks
//handle input
if(touching){

    touchDistance = min(point_distance(x,y, device_mouse_x_to_gui(touchid),device_mouse_y_to_gui(touchid)), radius);
    dir = point_direction(x,y, device_mouse_x_to_gui(touchid),device_mouse_y_to_gui(touchid));
    normaldir = dir;
    joyx = lerp(joyx, lengthdir_x(touchDistance, dir), 0.4);
    joyy = lerp(joyy, lengthdir_y(touchDistance, dir), 0.4);
    
}else{

    joyx = lerp(joyx, 0, 0.5);
    joyy = lerp(joyy, 0, 0.5);
    
}

//normalize
normalx = (joyx / radius) * 1;
normaly = (joyy / radius) * 1;

//deadzone
if(abs(normalx) &lt; deadzone){ normalx = 0; }
if(abs(normaly) &lt; deadzone){ normaly = 0; }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch (os_type)
    {
    case os_windows: instance_destroy(); break;
    case os_android: break;
    case os_linux: instance_destroy(); break;
    case os_macosx: instance_destroy(); break;
    case os_ios: break;
    case os_winphone: break;
    case os_browser: break;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprite_index, 0, x, y);
draw_sprite(sprite_index, 1, x + joyx, y + joyy);

//Draw Border
//draw_circle(x, y, radius, 2);

//Draw CenterPoint
//draw_circle(x, y, 10, 2);

//Draw Joystick
//draw_circle(x + joyx, y +joyy, 8, 2);
//draw_line(x,y, x+joyx, y+joyy);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Void this function

/*

By placing this event here with this comment in it... game maker wont draw the gamepads
in the room.

It overwrites the default draw method so that these objects are not drawn in your world.

*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>80,80</point>
    <point>80,80</point>
  </PhysicsShapePoints>
</object>
