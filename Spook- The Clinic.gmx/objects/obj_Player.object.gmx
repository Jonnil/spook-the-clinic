<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Player_Stand</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_Player_Stand</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>facing=+1;
xscale=1;
yscale=1;
xscale2=1;
yscale2=1;
sin_input=0;
global.wwwidth=-0;
state=0;
grab=-40;
run=true;
runtrue=false;
SlideJump=false;
BackJump=false;
running=false;
beginrun=false;
ContinuousJump=0;
Timer=6000;
Swing=false;
pickup=false;
alarm[4]=15;

xstick=0;
ystick=0;
Duck=false;
DDuck=false;
pause=0;
move=true;
lightning=true;
hurt=false;
hurthurt=false;
global.hud_p=false;
global.hud_b=false;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>801</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_cursor</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>5</kind>
            <sprite>-100</sprite>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>DDuck=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///HUD Alarm
global.hud_p=false;
global.hud_b=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hurt=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gamepad_set_vibration(0,0,0);
gamepad_set_vibration(1,0,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ContinuousJump=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>running=false;
beginrun=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[2]=30;
if!Left{running=true;}
if!Right{running=true;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if hspeed=0{if facing=+1{hspeed+=4;}if facing=-1{hspeed-=4;}}
if Left or Right{run=true;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make alive in end step
sin_input+=0.1;
var offset=0;
xscale2=smooth_approach(xscale2,1+(sin(sin_input+offset)*0.05),0.02);
yscale2=smooth_approach(yscale2,1+(sin(sin_input+pi+offset)*0.05),0.02);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Jonnil's Platformer Step
if(abs(hspeed)&gt;0){image_xscale=sign(hspeed);}
//Controls
if global.gamepad=false{global.face1=gp_face1;global.face2=gp_face2;global.face3=gp_face3;global.face4=gp_face4;}else
if global.gamepad=true{global.face1=gp_face2;global.face2=gp_face1;global.face3=gp_face4;global.face4=gp_face3;}

if (instance_number(obj_LeftStick)&gt;0)
{xstick += obj_LeftStick.normalx * 3;
ystick += obj_LeftStick.normaly * 3;}
gamepad_set_axis_deadzone(0,0.5);
Left=keyboard_check(vk_left)or keyboard_check(ord("A"))or gamepad_button_check(0,gp_padl)or(gamepad_axis_value(0,gp_axislh)&lt;0);
Right=keyboard_check(vk_right)or keyboard_check(ord("D"))or gamepad_button_check(0,gp_padr)or(gamepad_axis_value(0,gp_axislh)&gt;0);
Up=keyboard_check(vk_up)or keyboard_check(vk_space)or keyboard_check(ord("W"))or gamepad_button_check(0,gp_padu)or gamepad_button_check(0,global.face1);/*or(gamepad_axis_value(0,gp_axislv)&lt;0);*/
UpLadder=keyboard_check(vk_up)or keyboard_check(vk_space)or keyboard_check(ord("W"))or gamepad_button_check(0,gp_padu)or gamepad_button_check(0,global.face1)or(gamepad_axis_value(0,gp_axislv)&lt;0);
Down=keyboard_check(vk_down)or keyboard_check(ord("S"))or gamepad_button_check(0,gp_padd)or gamepad_button_check(0,gp_shoulderr)or gamepad_button_check(0,global.face2);/*or(gamepad_axis_value(0,gp_axislv)&gt;0);*/
DropDown=keyboard_check(vk_down)or keyboard_check(ord("S"))or gamepad_button_check(0,gp_padd)or gamepad_button_check(0,gp_shoulderr)or gamepad_button_check(0,global.face2)or(gamepad_axis_value(0,gp_axislv)&gt;0);
DownLadder=keyboard_check(vk_down)or keyboard_check(ord("S"))or gamepad_button_check(0,gp_padd)or(gamepad_axis_value(0,gp_axislv)&gt;0)or gamepad_button_check(0,global.face2)or gamepad_button_check(0,gp_shoulderr);
DownP=keyboard_check_pressed(vk_down)or keyboard_check_pressed(ord("S"))or gamepad_button_check_pressed(0,gp_padd);
UpP=keyboard_check_pressed(vk_up)or keyboard_check_pressed(ord("W"))or gamepad_button_check_pressed(0,gp_padu);
Jump=keyboard_check/*_pressed*/(vk_up)or keyboard_check/*_pressed*/(vk_space)or keyboard_check/*_pressed*/(ord("W"))or gamepad_button_check/*_pressed*/(0,gp_padu)or gamepad_button_check/*_pressed*/(0,global.face1);
//gamepad_set_axis_deadzone(1,0.7);
//Left=keyboard_check(vk_left)or keyboard_check(ord("A"))or gamepad_button_check(1,gp_padl)or(gamepad_axis_value(1,gp_axislh)&lt;0);
//Right=keyboard_check(vk_right)or keyboard_check(ord("D"))or gamepad_button_check(1,gp_padr)or(gamepad_axis_value(1,gp_axislh)&gt;0);
//Up=keyboard_check(vk_up)or keyboard_check(vk_space)or keyboard_check(ord("W"))or gamepad_button_check(1,gp_padu)or gamepad_button_check(1,gp_face1)or(gamepad_axis_value(1,gp_axislv)&lt;0);
//Down=keyboard_check(vk_down)or keyboard_check(ord("S"))or gamepad_button_check(1,gp_padd)or(gamepad_axis_value(1,gp_axislv)&gt;0);
//DownP=keyboard_check_pressed(vk_down)or keyboard_check_pressed(ord("S"))or gamepad_button_check_pressed(1,gp_padd)or(gamepad_axis_value(1,gp_axislv)&gt;0);
//Jump=keyboard_check/*_pressed*/(vk_up)or keyboard_check/*_pressed*/(vk_space)or keyboard_check/*_pressed*/(ord("W"))or gamepad_button_check/*_pressed*/(1,gp_padu)or gamepad_button_check/*_pressed*/(1,gp_face1)or gamepad_button_check/*_pressed*/(1,gp_shoulderrb)or gamepad_button_check/*_pressed*/(1,gp_shoulderr)

if xstick&lt;0{Left=true;}
if xstick&gt;0{Right=true;}
if ystick&lt;0{Up=true;Jump=true;}
if ystick&gt;0{Down=true;}
if (instance_number(obj_LeftStick)&gt;0)
{obj_LeftStick.normalx=0{xstick=0;LeftR=true;RightR=true;}
obj_LeftStick.normaly=0{ystick=0;}}else{xstick=0;ystick=0;}

if move=true{
if state=0or Swing=false{
//Heart of the code &lt;3
if(place_free(x+0,y+1)){gravity_direction=270;gravity=0.5;}else{gravity_direction=270;gravity=0;grab=-40;}//Check whether in the air
//if(vspeed&gt;12){vspeed=12;}//Limit the vertical speed
if(asset_get_type("obj_ladder")==asset_object){//Check whether on a ladder
if place_meeting(x,y,obj_ladder){gravity_direction=270;gravity=0;vspeed=0;BackJump=false;if(asset_get_type("spr_climbing")==asset_sprite){sprite_index=spr_Player_Climb;}mask_index=spr_Player_Stand;}
if UpLadder and !DownLadder and place_meeting(x,y-3,obj_ladder)and(place_free(x+0,y-3)){y-=3;vspeed-=0.3;}}
if DownLadder and !UpLadder and(place_free(x+0,y+3))and place_meeting(x,y,obj_ladder){if runtrue=true{y+=6;vspeed+=0.6;}else{y+=3;vspeed+=0.3;}}}
if Left and!Right{if(x&gt;view_xview){if(place_free(x-4,y+0)){x-=1;y=y+0;hspeed-=0.4;}else if(place_free(x-4,y-8)){x=x-0;y=y-8;vspeed-=8;/*move_contact_solid(270,8);*/}}}
if Right and!Left{if(x&lt;room_width){if(place_free(x+4,y+0)){x+=1;y=y+0;hspeed+=0.4;}else if(place_free(x+4,y-8)){x=x+0;y=y-8;vspeed-=8;/*move_contact_solid(270,8);*/}}}
if Jump and!(place_free(x+0,y+1)){if ContinuousJump=0{vspeed=-12;xscale=0.9;yscale=1.1;}if ContinuousJump=1{vspeed=-16;xscale=0.7;yscale=1.3;}if ContinuousJump=2and abs(hspeed)&gt;5{vspeed=-20;xscale=0.5;yscale=1.5;}}
if(y&gt;room_height){if(asset_get_type("snd_killcharacter")==asset_sound){audio_play_sound(snd_killcharacter,0,false);}global.difficulty+=1;scr_death();}

/*RUN*/if SlideJump=false and run=true{if keyboard_check_pressed(vk_control)or keyboard_check_pressed(vk_shift)or gamepad_button_check_pressed(0,gp_stickl)or gamepad_button_check_pressed(0,global.face3)/*or gamepad_button_check_pressed(1,gp_stickl)*/{if abs(hspeed)&gt;9hspeed=9*sign(hspeed);runtrue=true;}}
/*RUN*/if SlideJump=false and run=true{if keyboard_check(vk_control)or keyboard_check(vk_shift)or gamepad_button_check(0,gp_stickl)or gamepad_button_check(0,global.face3)/*or gamepad_button_check(1,gp_stickl)*/or beginrun=true{if abs(hspeed)&gt;8hspeed=8*sign(hspeed);runtrue=true;}else{if abs(hspeed)&gt;4hspeed=4*sign(hspeed);runtrue=false;}}}

///Collision
//Monster (not working properly but close enough)
//if(asset_get_type("obj_Monster1")==asset_object){if place_meeting(x,y,obj_Monster1)
//{if(vspeed&gt;0&amp;&amp;y&lt;other.y+8)
//{/*Destroy the monster*/if(asset_get_type("snd_killmonster")==asset_sound){sound_play(snd_killmonster);}score+=50;
///*with(obj_Monster1)*/motion_set(360,0);
//if(asset_get_type("obj_monster_dead")==asset_object){/*with(obj_Monster1)*/instance_change(obj_monster_dead,1);}
//}else{/*Destroy the character*/if(asset_get_type("snd_killcharacter")==asset_sound){sound_play(snd_killcharacter);}lives-=1;scr_death();}}}
//Death
if(asset_get_type("obj_death")==asset_object)and place_meeting(x,y,obj_death){audio_stop_all();global.difficulty-=1;/*lives-=1;scr_death();*/
with(obj_ps){part_particles_create(global.ps,x+random_range(-32,+32),y+random_range(-32,+32),global.pt_blood,10);}obj_ps.x=obj_Player.x;obj_ps.y=obj_Player.y;
if!audio_is_playing(snd_Heartbeat){audio_play_sound(snd_Heartbeat,100,false);}
if!audio_is_playing(snd_killcharacter){audio_play_sound(snd_killcharacter,100,false);audio_sound_pitch(snd_killcharacter,random_range(+0.95,+1.2))audio_sound_gain(snd_killcharacter,random_range(+0.095,+1.0),300)}
if!(instance_number(obj_Static)&gt;0){instance_create(x,y,obj_Static);}}

//Meanwile Monster
if(asset_get_type("obj_Monster1")==asset_object)and place_meeting(x,y,obj_Monster1){global.difficulty-=2;sprite_index=spr_Player_Dead;/*lives-=1;scr_death();*/
with(obj_ps){part_particles_create(global.ps,x+random_range(-32,+32),y+random_range(-32,+32),global.pt_blood,10);}obj_ps.x=obj_Player.x;obj_ps.y=obj_Player.y;
if!audio_is_playing(snd_Heartbeat){audio_play_sound(snd_Heartbeat,100,false);}
if!audio_is_playing(snd_killcharacter){audio_play_sound(snd_killcharacter,100,false);audio_sound_pitch(snd_killcharacter,random_range(+0.95,+1.2))audio_sound_gain(snd_killcharacter,random_range(+0.095,+1.0),300)}
if!(instance_number(obj_Static)&gt;0){instance_create(x,y,obj_Static);}}

//Extras
depth=-y-room_height;friction=0.2;if hspeed&lt;0{facing=-1;}if hspeed&gt;0{facing=+1;}if abs(hspeed)&gt;10hspeed=10*sign(hspeed);/*if vspeed&gt;30{vspeed=30;}*/image_speed=speed/35+0.135;
//if keyboard_check(vk_escape){game_end();}

xscale=Approach(xscale,xscale2,0.05);
yscale=Approach(yscale,yscale2,0.05);
global.wwwidth=Approach(global.wwwidth,1024,12+speed);
if global.wwwidth&gt;1024{global.wwwidth=1024;}

/*Auto-Scaling For Devices*/view_wview=display_get_gui_width();view_hview=display_get_gui_height();if view_wview&gt;room_width{view_wview=room_width;}if view_hview&gt;room_height{view_hview=room_height;}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if Swing=false{if hspeed=0and place_meeting(x,y+1,obj_Wall){sprite_index=spr_Player_Stand;}
if abs(hspeed)&gt;0and place_meeting(x,y+1,obj_Wall){sprite_index=spr_Player_Walk;}
if abs(hspeed)&gt;4and place_meeting(x,y+1,obj_Wall){sprite_index=spr_Player_Run;}
if vspeed&gt;+1{sprite_index=spr_Player_Fall;}
if vspeed&gt;0 and vspeed&lt;1{sprite_index=spr_Player_Fall;image_index=0;}
if vspeed&lt;-1{sprite_index=spr_Player_Jump;}
if ContinuousJump=2and vspeed&lt;-1{sprite_index=spr_Player_JumpThree;image_speed=0.4;}
if place_meeting(x,y,obj_ladder){sprite_index=spr_Player_Climb;image_speed=vspeed;}}
if sprite_index=spr_Player_Crawl and place_meeting(x,y+1,obj_Wall){sprite_index=spr_Player_Crawl;if speed&gt;1{image_speed=speed;}else{image_speed=0;}}
if sprite_index=spr_Player_Crouch and place_meeting(x,y+1,obj_Wall){sprite_index=spr_Player_Crouch;if speed&gt;1{image_speed=speed;}else{image_speed=0;}}
if runtrue=false/*or abs(hspeed)&gt;4.6*/{ContinuousJump=0;}
/*Attacking*/if(instance_number(obj_textbox)=0){if global.Axe=true and Swing=false{if mouse_check_button_pressed(mb_left)or gamepad_button_check_pressed(0,gp_shoulderrb){if place_meeting(x,y+1,obj_Wall){instance_create(x,y,obj_Swing_Object)image_speed=1;hspeed=0;vspeed=0;sprite_index=spr_Player_Swing;Swing=true;}}}}
if Swing=true and image_index&gt;16{image_speed=speed/3+0.35;sprite_index=spr_Player_Stand;image_index=0;Swing=false;}
if Swing=true and image_index&gt;9{image_speed=speed/3+0.35;instance_create(x,y,obj_SwingHitbox);}
if Swing=true and global.Axe=false{Swing=false;}
if Swing=true and image_index=spr_Player_Swing{image_index=spr_Player_Stand;}
if!place_meeting(x,y+1,obj_Wall){Swing=false;alarm[3]=10;}
if hspeed&gt;+0and Left and place_meeting(x,y+1,obj_Wall)and runtrue=true and Swing=false{sprite_index=spr_Player_Turn;}
if hspeed&lt;-0and Right and place_meeting(x,y+1,obj_Wall)and runtrue=true and Swing=false{sprite_index=spr_Player_Turn;}

if pickup=true{if (instance_number(obj_textbox)&gt;0){sprite_index=spr_Player_Pickup{if image_index&gt;3{sprite_index=spr_Player_Stand;pickup=false;}}}}
if pickup=true{if image_index&gt;3{sprite_index=spr_Player_Stand;pickup=false;}}
if pickup=false{if (instance_number(obj_textbox)&gt;0){}}

if distance_to_object(obj_Monster1)&lt;320{{if instance_number(obj_Sweatdrop)&lt;5{instance_create(x,y-32,obj_Sweatdrop);}}}
if (instance_number(obj_LongFall)&gt;0){if place_meeting(x,y+sprite_height,obj_Wall){if vspeed&gt;12{obj_LongFall.x=x+0;obj_LongFall.y=y+0;}}}

if Swing=false and DownP and place_meeting(x,y+1,obj_Wall){image_index=0;}
if Jump{mask_index=spr_Player_Stand;}

if move=true{
//Duck + Jump at variable hspeed = Backjump/Backspin or Longjump
if Duck=true{DDuck=false;if Jump and!(place_free(x+0,y+1))and(place_free(x+0,y-1)){/*if facing=+1{hspeed+=4;state=0;}if facing=-1{hspeed-=4;state=0;}*/vspeed=-8;xscale=0.8;yscale=1.2;SlideJump=true;Duck=false;}}
if DDuck=true{Duck=false;if Jump and!(place_free(x+0,y+1))and(place_free(x+0,y-1)){/*if facing=+1{hspeed-=8;state=0;}if facing=-1{hspeed+=8;state=0;}*/vspeed=-16;xscale=0.8;yscale=1.2;BackJump=true;/*SWOSH SOUND*/audio_play_sound(snd_Swosh,false,false);audio_sound_pitch(snd_Swosh,random_range(+0.95,+1.2))audio_sound_gain(snd_Swosh,random_range(+0.095,+1.0),300)DDuck=false;}}
if abs(hspeed)&lt;4{Duck=false;}

if Swing=false and Down and runtrue=true and abs(hspeed)&gt;4 and place_meeting(x,y+1,obj_Wall){Duck=true;
sprite_index=spr_Player_Slide;mask_index=spr_Player_Crawl;if image_index&gt;2and image_index&lt;4and!audio_is_playing(snd_Bounce_Slide){audio_play_sound(snd_Bounce_Slide,10,false);}if image_index&gt;4{image_index=4;}
if runtrue=true{if abs(hspeed)&gt;8hspeed-=0.8*sign(hspeed);}else{if abs(hspeed)&gt;4hspeed-=0.4*sign(hspeed);}
if place_meeting(x,y+1,obj_Wall){if!place_free(x,y-1){mask_index=spr_Player_Crawl;sprite_index=spr_Player_Crouch;}}
if!place_meeting(x,y+1,obj_Wall){mask_index=spr_Player_Crawl;y+=4;vspeed+=4;}
}else

if Swing=false and Down and place_meeting(x,y+1,obj_Wall){sprite_index=spr_Player_Crawl;mask_index=spr_Player_Crawl;
if abs(hspeed)&lt;4 {DDuck=true;alarm[7]=room_speed;}else{DDuck=false;}
if runtrue=true{if abs(hspeed)&gt;2hspeed=2*sign(hspeed);}else{if abs(hspeed)&gt;1hspeed=1*sign(hspeed);}
}else{if place_meeting(x,y+1,obj_Wall){if place_free(x,y-1){mask_index=spr_Player_Stand;}if!place_free(x,y-1){mask_index=spr_Player_Crawl;sprite_index=spr_Player_Crouch;}}}
if SlideJump=true and sprite_index=spr_Player_Fall{sprite_index=spr_Player_FallLong;}
if BackJump=true and sprite_index=spr_Player_Jump{sprite_index=spr_Player_BackJump;}
if BackJump=true{gravity=0.3;}
if BackJump=true or sprite_index=spr_Player_BackJump{if image_index&gt;10{image_index=10;}}
if sprite_index=spr_Player_FallLong and image_index&gt;2{sprite_index=spr_Player_FallLonger;image_index=3;}

UpP=keyboard_check_pressed(vk_up)or keyboard_check_pressed(vk_space)or keyboard_check_pressed(ord("W"))or gamepad_button_check_pressed(0,gp_padu)or gamepad_button_check_pressed(0,global.face1)or(gamepad_axis_value(0,gp_axislv)&lt;0);
//UpP=keyboard_check_pressed(vk_up)or keyboard_check_pressed(vk_space)or keyboard_check_pressed(ord("W"))or gamepad_button_check_pressed(1,gp_padu)or gamepad_button_check_pressed(1,global.face1)or(gamepad_axis_value(1,gp_axislv)&lt;0);
if UpP and place_meeting(x,y+1,obj_Wall){image_index=0;}
if sprite_index=spr_Player_Jump and image_index&gt;4{image_index=5;}
if sprite_index=spr_Player_Fall and image_index&gt;8{image_index=5;}

///Running
LeftR=keyboard_check_released(vk_left)or keyboard_check_released(ord("A"))or gamepad_button_check_released(0,gp_padl)or(gamepad_axis_value(0,gp_axislh)&lt;-0.9);
RightR=keyboard_check_released(vk_right)or keyboard_check_released(ord("D"))or gamepad_button_check_released(0,gp_padr)or(gamepad_axis_value(0,gp_axislh)&gt;+0.9);

///Running
if LeftR{alarm[1]=1;beginrun=false;}
if RightR{alarm[1]=1;beginrun=false;}

if running=true
{if Left and!Right{beginrun=true;alarm[2]=3;}
if Right and!Left{beginrun=true;alarm[2]=3;}}}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Ledge grab state
if state=0and Swing=false{
if !position_meeting(x+(100*sign(facing)),yprevious+grab,obj_Wall)
and position_meeting(x+(100*sign(facing)),y-4,obj_Wall)
and vspeed&gt;0and!place_meeting(x,y,obj_ladder){audio_play_sound(snd_Bounce,false,false);audio_sound_pitch(snd_Bounce,random_range(+0.95,+1.2))audio_sound_gain(snd_Bounce,random_range(+0.095,+1.0),300)sprite_index=spr_Player_Grab;image_index=0;hspeed=0;vspeed=0;state=1;mask_index=spr_Player_Stand;}}

if state=1and!place_meeting(x,y,obj_ladder)and Swing=false
{if Left and place_meeting(x+4,y,obj_Wall){vspeed-=12;hspeed=0;if abs(hspeed)&gt;0hspeed=0*sign(hspeed);mask_index=spr_Player_Stand;if vspeed&lt;-12{state=0;vspeed=-12;}}
if Right and place_meeting(x-4,y,obj_Wall){vspeed-=12;hspeed=0;if abs(hspeed)&gt;0hspeed=0*sign(hspeed);mask_index=spr_Player_Stand;if vspeed&lt;-12{state=0;vspeed=-12;}}
SlideJump=false;
BackJump=false;
if sprite_index=spr_Player_Jump{image_index=0;sprite_index=spr_Player_Grab;}
if sprite_index=spr_Player_Fall{image_index=0;sprite_index=spr_Player_Grab;}
image_speed=0.5;
mask_index=spr_Player_Stand;
gravity=0;
if position_meeting(x+(100*sign(facing)),y-8,obj_Wall){vspeed-=0.4;}
if facing=+1{if place_empty(x+1,y)or!place_meeting(x+4,y,obj_Wall){hspeed+=8.4;x+=8.4;}}else{hspeed=0;}
if facing=+1{if!place_meeting(x+40,y,obj_Wall){state=0;}}
if facing=-1{if place_empty(x-1,y)or!place_meeting(x-4,y,obj_Wall){hspeed-=8.4;x-=8.4;}}else{hspeed=0;}
if facing=-1{if!place_meeting(x-40,y,obj_Wall){state=0;}}
if Jump{vspeed=-12;y-=12;state=0;alarm[0]=10;run=false;if facing=+1{x-=4;}if facing=-1{x+=4;}mask_index=spr_Player_Stand;}
if DropDown{state=0;grab=-4;mask_index=spr_Player_Stand;vspeed+=4;}
}

if hspeed&lt;0{if(place_free(x-4,y+0)){x-=0;y=y+0;hspeed-=0;}else if(place_free(x-4,y-8)){x=x-0;y=y-8;vspeed-=0.8;/*move_contact_solid(270,8);*/}}
if hspeed&gt;0{if(place_free(x+4,y+0)){x+=0;y=y+0;hspeed+=0;}else if(place_free(x+4,y-8)){x=x+0;y=y-8;vspeed-=0.8;/*move_contact_solid(270,8);*/}}
if hspeed&lt;0{if(place_free(x-4,y+0)){x-=0;y=y+0;hspeed-=0;}else if(place_free(x-4,y+1)){x=x-0;y=y+8;vspeed+=0.8;/*move_contact_solid(270,8);*/}}
if hspeed&gt;0{if(place_free(x+4,y+0)){x+=0;y=y+0;hspeed+=0;}else if(place_free(x+4,y+1)){x=x+0;y=y+8;vspeed+=0.8;/*move_contact_solid(270,8);*/}}

if sprite_index=spr_Player_Grab and image_index&gt;2{sprite_index=spr_Player_Grabing;}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Difficulty
//Game Start: global.difficulty=0;
if global.difficulty&lt;-6{global.difficulty=-6;}
if global.difficulty&gt;+6{global.difficulty=+6;}
Timer-=1;

//if state=0{
//if place_meeting(x,y-1,obj_Wall)and!place_meeting(x-1,y,obj_Wall)and place_free(x-80,y-80){x=x-4;y=y+0.8;hspeed-=4;vspeed+=0.8;gravity+=0.1;}
//if place_meeting(x,y-1,obj_Wall)and!place_meeting(x+1,y,obj_Wall)and place_free(x+80,y-80){x=x+4;y=y+0.8;hspeed+=4;vspeed+=0.8;gravity+=0.1;}}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Health Code
if health&lt;=0{global.paper=0;global.barrel=0;lives-=1;audio_play_sound(snd_PlayerDead,10,false);audio_sound_pitch(snd_PlayerDead,random_range(+0.95,+1.2))audio_sound_gain(snd_PlayerDead,random_range(+0.095,+1.0),300)
effect_create_above(ef_explosion,x,y,2,c_red);effect_create_above(ef_explosion,x,y,1,c_yellow);instance_destroy();}
if hurt=false and health&lt;10{
if global.Jumpscares=true{instance_create(obj_View.x,obj_View.y,obj_Jumpscare);
if!audio_is_playing(snd_Scream){audio_play_sound(snd_Scream,1000,false);audio_sound_pitch(snd_Scream,random_range(+0.95,+1.2));}
if place_meeting(x,y,obj_Monster1){if instance_number(obj_Jumpscare)&gt;0{obj_Jumpscare.image_index=0;}}
if place_meeting(x,y,obj_Monster2){if instance_number(obj_Jumpscare)&gt;0{obj_Jumpscare.image_index=1;}}
if place_meeting(x,y,obj_Monster3){if instance_number(obj_Jumpscare)&gt;0{obj_Jumpscare.image_index=2;}}
if place_meeting(x,y,obj_Monster4){if instance_number(obj_Jumpscare)&gt;0{obj_Jumpscare.image_index=3;}}
if place_meeting(x,y,obj_death){if instance_number(obj_Jumpscare)&gt;0{obj_Jumpscare.image_index=4;}}}

gamepad_set_colour(0,c_red);sprite_index=spr_Player_Dead;audio_sound_pitch(snd_PlayerDead,random_range(+0.95,+1.2))audio_sound_gain(snd_PlayerDead,random_range(+0.095,+1.0),300)if hurthurt=false{alarm[5]=room_speed;hurthurt=true;}}
if hurt=false and health&lt;1{
if global.Jumpscares=true{instance_create(obj_View.x,obj_View.y,obj_Jumpscare);
if!audio_is_playing(snd_Scream){audio_play_sound(snd_Scream,1000,false);audio_sound_pitch(snd_Scream,random_range(+0.95,+1.2));}
if place_meeting(x,y,obj_Monster1){if instance_number(obj_Jumpscare)&gt;0{obj_Jumpscare.image_index=0;}}
if place_meeting(x,y,obj_Monster2){if instance_number(obj_Jumpscare)&gt;0{obj_Jumpscare.image_index=1;}}
if place_meeting(x,y,obj_Monster3){if instance_number(obj_Jumpscare)&gt;0{obj_Jumpscare.image_index=2;}}
if place_meeting(x,y,obj_Monster4){if instance_number(obj_Jumpscare)&gt;0{obj_Jumpscare.image_index=3;}}
if place_meeting(x,y,obj_death){if instance_number(obj_Jumpscare)&gt;0{obj_Jumpscare.image_index=4;}}}

gamepad_set_colour(0,c_red);sprite_index=spr_Player_Dead;audio_sound_pitch(snd_PlayerDead,random_range(+0.95,+1.2))audio_sound_gain(snd_PlayerDead,random_range(+0.095,+1.0),300)if hurthurt=false{hurthurt=true;}}
if place_meeting(x,y,obj_Monster1){health-=random_range(1,10);gamepad_set_vibration(0,0.1,0.1);gamepad_set_vibration(1,0.1,0.1);alarm[4]=15;}
if place_meeting(x,y,obj_death){health-=10;gamepad_set_vibration(0,0.5,0.5);gamepad_set_vibration(1,0.5,0.5);alarm[4]=15;}
//if place_meeting(x,y,obj_Enemy_Bullet){health-=10;}

///Lives Code
if lives&lt;1{if global.Jumpscares=true{instance_create(obj_View.x,obj_View.y,obj_Jumpscare);
if!audio_is_playing(snd_Scream){audio_play_sound(snd_Scream,1000,false);audio_sound_pitch(snd_Scream,random_range(+0.95,+1.2));}
if place_meeting(x,y,obj_Monster1){if instance_number(obj_Jumpscare)&gt;0{obj_Jumpscare.image_index=0;}}
if place_meeting(x,y,obj_Monster2){if instance_number(obj_Jumpscare)&gt;0{obj_Jumpscare.image_index=1;}}
if place_meeting(x,y,obj_Monster3){if instance_number(obj_Jumpscare)&gt;0{obj_Jumpscare.image_index=2;}}
if place_meeting(x,y,obj_Monster4){if instance_number(obj_Jumpscare)&gt;0{obj_Jumpscare.image_index=3;}}
if place_meeting(x,y,obj_death){if instance_number(obj_Jumpscare)&gt;0{obj_Jumpscare.image_index=4;}}}
global.paper=0;global.barrel=0;scr_death();gamepad_set_vibration(0,0.5,0.5);gamepad_set_vibration(1,0.5,0.5);alarm[4]=15;}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pause Code
if keyboard_check_pressed(vk_escape)or keyboard_check_pressed(vk_pause)or gamepad_button_check_pressed(0,gp_start){if place_meeting(x,y+1,obj_Wall){if(!pause){pause=1;instance_deactivate_all(true);
move=false;instance_activate_object(obj_View)instance_create(x,y,obj_Menu);

gravity=0;speed=0;hspeed=0;vspeed=0;

}else{pause=0;instance_activate_all();move=true;with(obj_Menu)instance_destroy();}}}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if os_browser==browser_not_a_browser
{///Performance Improver PC
if pause=0{instance_activate_all();instance_deactivate_region(view_xview-640,view_yview-640,view_wview+6400,room_height,false,false);
instance_activate_object(obj_Player);instance_activate_object(obj_LeftStick);instance_activate_object(obj_View);instance_activate_object(obj_LongFall);
instance_activate_object(obj_Chair);instance_activate_object(obj_Menu);instance_activate_object(obj_ps);instance_activate_object(obj_Static);instance_activate_object(effect_shake);}
}else
{///Performance Improver HTML5
instance_activate_all();instance_deactivate_region(view_xview-320,view_yview-320,view_wview+320,room_height,false,false);
instance_activate_object(obj_Player);instance_activate_object(obj_LeftStick);instance_activate_object(obj_View);instance_activate_object(obj_LongFall);
instance_activate_object(obj_Chair);instance_activate_object(obj_Menu);instance_activate_object(obj_ps);instance_activate_object(obj_Static);instance_activate_object(effect_shake);
}
/*Audio Channel Number*/switch(os_browser){case browser_not_a_browser:switch(os_type){case os_windows:case os_macosx:audio_channel_num(200);break;default:audio_channel_num(64);break;}break;default:audio_channel_num(16);break;}

if fps&gt;20{if!irandom(9){effect_create_above(ef_cloud,random(room_width),random(room_height),choose(0,1,2),c_gray);}}

if global.SFX=false{audio_stop_all();}

if os_browser==browser_not_a_browser
{///Window has focus Pause Code
if!window_has_focus(){if(!pause){pause=1;instance_deactivate_all(true);
move=false;instance_activate_object(obj_View)instance_create(x,y,obj_Menu);
}else{pause=0;instance_activate_all();move=true;with(obj_Menu)instance_destroy();}}
}else{/*Do nothing*/}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Monster3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gamepad_set_vibration(0,1,1);gamepad_set_vibration(1,1,1);alarm[4]=15;
if(instance_number(effect_shake)=0){instance_create(x,y,effect_shake);}
instance_create(x,y,effect_shake);
if global.Jumpscares=true{if!audio_is_playing(snd_Scream){audio_play_sound(snd_Scream,1000,false);audio_sound_pitch(snd_Scream,random_range(+0.95,+1.2));}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Monster1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_number(effect_shake)=0){instance_create(x,y,effect_shake);}
instance_create(x,y,effect_shake);
if global.Jumpscares=true{if!audio_is_playing(snd_Scream){audio_play_sound(snd_Scream,1000,false);audio_sound_pitch(snd_Scream,random_range(+0.95,+1.2));}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Jonnil's Platformer Collision with Wall
move_contact_solid(direction,12);vspeed=0;
if hspeed&lt;0{hspeed+=abs(hspeed)/2;}if hspeed&gt;0{hspeed-=abs(hspeed)/2;}

var dd;
dd=point_direction(other.x,other.y,x,y);
while(place_meeting(x,y,other)){x+=lengthdir_x(0.5,dd);y+=lengthdir_y(0.5,dd);}
if runtrue=false{ContinuousJump=0;}
if(place_free(x+0,y+1)){gravity_direction=270;gravity=0.5;}else{gravity_direction=270;gravity=0;alarm[3]=10;xscale=1.1+vspeed;yscale=0.9;run=true;audio_play_sound(snd_Bounce,false,false);audio_sound_pitch(snd_Bounce,random_range(+0.95,+1.2))audio_sound_gain(snd_Bounce,random_range(+0.095,+1.0),300)SlideJump=false;BackJump=false;if runtrue=true{ContinuousJump+=1;/*alarm[3]=10;*/}else ContinuousJump=0;if ContinuousJump&gt;2{ContinuousJump=0;}}//Check whether in the air
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sprite_index=spr_Player_FallLong{sprite_index=spr_Player_FallLonger;}
if sprite_index=spr_Player_Swing{Swing=false;sprite_index=spr_Player_Stand;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>201</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_create_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>obj_View</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>201</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_create_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>obj_LongFall</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>health=100;
lives=1;
//instance_deactivate_all(true);
audio_stop_all();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>201</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_create_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>obj_ps</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
///Debug Mode
if debug_mode=true
{draw_line_width_colour(x,y,x+(100*sign(facing)),yprevious+grab,1,c_aqua,c_yellow);
draw_line_width_colour(x,y,x+(100*sign(facing)),y-4,1,c_yellow,c_aqua);
draw_text(x,y,string(vspeed));
draw_text_colour(x-320,y-320,"Difficulty: "+string(global.difficulty),c_white,c_white,c_white,c_white,1);
draw_text_colour(x-320,y-310,"Continuous Jump: "+string(ContinuousJump),c_white,c_white,c_white,c_white,1);
draw_text_colour(x-320,y-300,"Timer: "+string(Timer),c_white,c_white,c_white,c_white,1);
draw_text_colour(x-320,y-290,"Swing: "+string(Swing),c_white,c_white,c_white,c_white,1);
draw_text_colour(x-320,y-280,"Health: "+string(health),c_white,c_white,c_white,c_white,1);
draw_text_colour(x-320,y-270,"Xstick: "+string(xstick),c_white,c_white,c_white,c_white,1);
draw_text_colour(x-320,y-260,"Ystick: "+string(ystick),c_white,c_white,c_white,c_white,1);
draw_text_colour(x-320,y-250,"OS Browser: "+string(os_browser),c_white,c_white,c_white,c_white,1);
draw_text_colour(x-320,y-240,"OS Device: "+string(os_device),c_white,c_white,c_white,c_white,1);
draw_text_colour(x-320,y-230,"OS Type: "+string(os_type),c_white,c_white,c_white,c_white,1);
draw_text_colour(x-320,y-220,"OS Version: "+string(os_version),c_white,c_white,c_white,c_white,1);
var gp_num = gamepad_get_device_count();
for (var i = 0; i &lt; gp_num; i++;)
   {
   if gamepad_is_connected(i)
      {
      draw_text(x-32, y-32 + (i * 32), gamepad_get_description(i));
      }
   else
      {
      draw_text(x-32, y-32 + (i * 32), "No Gamepad Connected");
      }
   }}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
///Pause Draw
if(pause){draw_set_color(c_black);draw_rectangle(0,0,room_width,room_height,0)/*;draw_set_halign(fa_center);draw_set_font(fnt_menu);draw_set_color(c_white);draw_text(room_width/2,room_height/2,"Game Paused");*/draw_set_color(c_black);}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
